install.packages("ggplot2")
collatz <- function(x)
{
return({3^{x%%2}x+x%%2}/2)
}
collatz <- function(x)
{
return({3^{x%%2}x+x%%2}/2)
}
collatz <- function(x)
{
return({3^{x%%2}*x+x%%2}/2)
}
collatz(1:4)
collatz(1:8)
collatz(1:16)
collatz(1:16)
collatz(1:32)
collatz(1:64)
plot(1:64,collatz(1:64))
plot(1:64,collatz(1:64))
collatz(1:64)
cbind(1:64,collatz(1:64))
matrix(0,64,100)
resuls <- matrix(0,64,100)
results <- matrix(0,64,100)
results[,1] <- 1:64
for(i in 2:100)
{
results[,i]<-collatz(results[,i-1])
}
results
plot(results[1,])
plot(results[2,])
plot(results[27,])
plot(results[27,],type="l')
plot(results[27,],type="l")
plot(results[27,],type="l")
plot(results[28,],type="l")
plot(results[43,],type="l")
numInt <- 64
numInt <- 64
results <- matrix(0,numInt,100)
results[,1] <- 1:numInt
for(i in 2:100)
{
results[,i]<-collatz(results[,i-1])
}
plot(results[43,],type="l")
plot(results[44,],type="l")
plot(results[,1],results[,2],type="l")
plot(results[,1],results[,2])
plot(results[,2],results[,3])
plot(results[,1],results[,3])
plot(results[,1],results[,4])
plot(results[,1],results[,5])
plot(results[,1],results[,6])
plot(results[,1],results[,7])
plot(results[,1],results[,8])
numInt <- 256
results <- matrix(0,numInt,100)
results[,1] <- 1:numInt
for(i in 2:100)
{
results[,i]<-collatz(results[,i-1])
}
plot(results[,1],results[,8])
plot(results[,1],results[,9])
plot(results[,1],results[,2])
plot(results[,1],results[,3])
plot(results[,1],results[,4])
plot(results[,1],results[,5])
2^32
2^16
numInt <- 2^16
results <- matrix(0,numInt,100)
results[,1] <- 1:numInt
for(i in 2:100)
{
results[,i]<-collatz(results[,i-1])
}
plot(results[,1],results[,5])
plot(results[,1],results[,6])
plot(results[,1],results[,10])
plot(results[,1],results[,10])
plot(results[,1],results[,11])
plot(results[,1],results[,12])
plot(results[,1],results[,13])
plot(results[,1],results[,14])
plot(results[,1],results[,100])
plot(results[,1],results[,50])
results[,2]/results[,1]
i <- 1
plot(results[,i+1]/results[,i])
plot(results[,i+1]/results[,i])
i <- 2
plot(results[,i+1]/results[,i])
numInt <- 2^8
results <- matrix(0,numInt,100)
results[,1] <- 1:numInt
for(i in 2:100)
{
results[,i]<-collatz(results[,i-1])
}
plot(results[,1],results[,50])
i <- 2
plot(results[,i+1]/results[,i])
i <- 2
plot(results[,i+1]/results[,1])
i <- 3
plot(results[,i+1]/results[,1])
i <- 4
plot(results[,i+1]/results[,1])
i <- 5
plot(results[,i+1]/results[,1])
i <- 10
plot(results[,i+1]/results[,1])
i <- 3
plot(results[,i+1]/results[,1])
lm(results[,i+1]~results[,1]+0)
summary(lm(results[,i+1]~results[,1]+0))
cbind(1:64,collatz(1:64))
table(results[,2])
stoppingTime <- function(x)
{
startValue <- x
count <- 0
while(x > startValue)
{
x <- collatz(x)
count <- count + 1
}
}
stoppingTime(1:5)
stoppingTime(5)
stoppingTime <- function(x)
{
startValue <- x
count <- 0
while(x > startValue)
{
x <- collatz(x)
count <- count + 1
}
return(count)
}
stoppingTime(5)
stoppingTime(3)
stoppingTime <- function(x)
{
startValue <- x
count <- 0
while(x >= startValue)
{
x <- collatz(x)
count <- count + 1
}
return(count)
}
stoppingTime(3)
stoppingTime(3)
stoppingTime(4)
stoppingTime(1:4)
stoppingTime(2:5)
apply(2:5,stoppingTime)
?apply
sapply
sapply(2:5,stoppingTime)
sapply(2:100,stoppingTime)
sapply(2:1000,stoppingTime)
plot(2:1000,sapply(2:1000,stoppingTime))
plot(collatz(2:1000),sapply(2:1000,stoppingTime))
plot(2:1000,sapply(2:1000,stoppingTime))
plot(2:1000,sapply(2:1000,stoppingTime))
lm(sapply(2:1000,stoppingTime)~2:1000)
stoppingTimes <- sapply(2:1000,stoppingTime)
lm(stoppingTimes~2:1000)
stoppingTimes
length(stoppingTimes)
lm(stoppingTimes~(2:1000))
input <- 2:1000
lm(stoppingTimes~input)
summary(lm(stoppingTimes~input))
summary(lm(stoppingTimes~input+0))
stoppingTimes <- sapply(2:10000,stoppingTime)
input <- 2:10000
plot(stoppingTimes)
plot(density(stoppingTimes))
table(stoppingTimes)
input <- 2:100000
stoppingTimes <- sapply(input,stoppingTime)
table(stoppingTimes)
plot(table(stoppingTimes))
input <- 2:1000000
stoppingTimes <- sapply(input,stoppingTime)
stoppingTimes[1:100]
table(stoppingTimes[1:100])
table(stoppingTimes[1:100])
table(stoppingTimes[1:100])[1]
table(stoppingTimes[1:100])[1,]
table(stoppingTimes[1:100])/100
distStoppingTimes <- function(x)
{
return(table(stoppingTimes[1:x])/x)
}
distStoppingTimes(100)
distStoppingTimes(200)
distStoppingTimes(300)
stoppingTimes
table(stoppingTimes)
table(stoppingTimes)/1000000
as.vector(table(stoppingTimes))
plot(as.vector(table(stoppingTimes))/1000000)
plot(as.vector(table(stoppingTimes))[1:20]/1000000)
distStoppingTimes(300)
table(stoppingTimes)
gDIST
gNIV
library(RSGHB)
library(RSGHB)
?par
choice
